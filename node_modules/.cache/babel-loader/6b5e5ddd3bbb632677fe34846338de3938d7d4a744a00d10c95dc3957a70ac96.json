{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\37063\\\\OneDrive\\\\Desktop\\\\projects\\\\quote-generator\\\\src\\\\pages\\\\Main.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport '../styles/main.css';\nimport Quote from '../components/Quote';\nimport Author from '../components/Author';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const [data, setData] = useState(null);\n  const [quote, setQuote] = useState('');\n  const [author, setAuthor] = useState('');\n  const [genre, setGenre] = useState('');\n  const [mouseClicked, setMouseClicked] = useState(false);\n  const [content, setContent] = useState( /*#__PURE__*/_jsxDEV(Author, {\n    author: author,\n    genre: genre,\n    handleMouseClick: handleMouseClick\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 42\n  }, this));\n  const getRandomQuote = () => {\n    if (!data) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 14\n      }, this);\n    }\n    let randomNumber = Math.floor(Math.random() * data.length);\n    for (let i = 0; i < data.length; i++) {\n      if (i === randomNumber) {\n        setQuote(data[i].quoteText);\n        setAuthor(data[i].quoteAuthor);\n        setGenre(data[i].quoteGenre);\n      }\n    }\n  };\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await fetch('https://quote-garden.onrender.com/api/v3/quotes');\n        const responseJson = await response.json();\n        setData(responseJson.data);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (data) {\n      getRandomQuote();\n    }\n  }, [data]);\n  const handleMouseClick = pickedAuthor => {\n    let sameAuthor = [];\n    for (let i = 0; i < data.length; i++) {\n      if (data[i].quoteAuthor === pickedAuthor) {\n        sameAuthor.push(data[i].quoteText);\n      }\n    }\n    setContent(() => {\n      for (let j = 0; j < sameAuthor.length; j++) {\n        /*#__PURE__*/_jsxDEV(Quote, {\n          quote: sameAuthor[j]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"random-button\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"random\",\n        onClick: getRandomQuote,\n        children: [\"random \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"material-symbols-outlined\",\n          children: \"autorenew\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 61\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quote-components\",\n      children: [/*#__PURE__*/_jsxDEV(Quote, {\n        quote: quote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), content]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(Main, \"+S1Bq7iao2Y8ce4i+jyRcrLuARQ=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["useState","useEffect","Quote","Author","jsxDEV","_jsxDEV","Main","_s","data","setData","quote","setQuote","author","setAuthor","genre","setGenre","mouseClicked","setMouseClicked","content","setContent","handleMouseClick","fileName","_jsxFileName","lineNumber","columnNumber","getRandomQuote","children","randomNumber","Math","floor","random","length","i","quoteText","quoteAuthor","quoteGenre","fetchData","response","fetch","responseJson","json","err","console","log","pickedAuthor","sameAuthor","push","j","className","id","onClick","_c","$RefreshReg$"],"sources":["C:/Users/37063/OneDrive/Desktop/projects/quote-generator/src/pages/Main.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nimport '../styles/main.css';\r\n\r\nimport Quote from '../components/Quote';\r\nimport Author from '../components/Author';\r\n\r\nconst Main = () => {\r\n  const [data, setData] = useState(null);\r\n  const [quote, setQuote] = useState('');\r\n  const [author, setAuthor] = useState('');\r\n  const [genre, setGenre] = useState('');\r\n  const [mouseClicked, setMouseClicked] = useState(false);\r\n  const [content, setContent] = useState(<Author\r\n    author={author}\r\n    genre={genre}\r\n    handleMouseClick={handleMouseClick}\r\n  />)\r\n\r\n\r\n\r\n  const getRandomQuote = () => {\r\n    if (!data) {\r\n      return <p>Loading...</p>\r\n    }\r\n    let randomNumber = Math.floor(Math.random() * data.length);\r\n    for (let i = 0; i < data.length; i++) {\r\n      if (i === randomNumber) {\r\n        setQuote(data[i].quoteText);\r\n        setAuthor(data[i].quoteAuthor);\r\n        setGenre(data[i].quoteGenre);\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const response = await fetch('https://quote-garden.onrender.com/api/v3/quotes');\r\n        const responseJson = await response.json();\r\n        setData(responseJson.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      getRandomQuote();\r\n\r\n    }\r\n  }, [data]);\r\n\r\n\r\n  const handleMouseClick = (pickedAuthor) => {\r\n    let sameAuthor = [];\r\n    for (let i = 0; i < data.length; i++) {\r\n      if (data[i].quoteAuthor === pickedAuthor) {\r\n        sameAuthor.push(data[i].quoteText);\r\n      }\r\n    }\r\n    setContent(() => {\r\n      for (let j = 0; j < sameAuthor.length; j++) {\r\n        <Quote quote={sameAuthor[j]} />\r\n      }\r\n    })\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className='main'>\r\n      <div className='random-button'>\r\n        <button id=\"random\" onClick={getRandomQuote}>random <span className=\"material-symbols-outlined\">\r\n          autorenew\r\n        </span></button>\r\n\r\n      </div>\r\n      <div className='quote-components'>\r\n        <Quote quote={quote} />\r\n        {content}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}