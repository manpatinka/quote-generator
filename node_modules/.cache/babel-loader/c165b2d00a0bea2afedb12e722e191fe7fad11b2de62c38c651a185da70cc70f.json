{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\37063\\\\OneDrive\\\\Desktop\\\\projects\\\\quote-generator\\\\src\\\\pages\\\\Main.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport '../styles/main.css';\nimport Quote from '../components/Quote';\nimport Author from '../components/Author';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const [quote, setQuote] = useState('');\n  const [author, setAuthor] = useState('');\n  const [genre, setGenre] = useState('');\n  const [mouseClicked, setMouseClicked] = useState(false);\n  const getRandomQuote = data => {\n    if (!data) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 14\n      }, this);\n    }\n    let randomNumber = Math.floor(Math.random() * data.length);\n    for (let i = 0; i < data.length; i++) {\n      if (i === randomNumber) {\n        setQuote(data[i].quoteText);\n        setAuthor(data[i].quoteAuthor);\n        setGenre(data[i].quoteGenre);\n        setMouseClicked(false);\n      }\n    }\n  };\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await fetch('https://quote-garden.onrender.com/api/v3/quotes');\n        const responseJson = await response.json();\n        getRandomQuote(responseJson.data);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    fetchData();\n  }, []);\n  let content;\n  let sameAuthor = [];\n  const handleMouseClick = pickedAuthor => {\n    for (let i = 0; i < data.length; i++) {\n      if (data[i].quoteAuthor === pickedAuthor) {\n        sameAuthor.push(data[i]);\n      }\n    }\n    content = sameAuthor.map(quote => /*#__PURE__*/_jsxDEV(Quote, {\n      quote: quote.quoteText\n    }, quote.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 41\n    }, this));\n    console.log(content);\n    setMouseClicked(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"random-button\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"random\",\n        onClick: getRandomQuote,\n        children: [\"random \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"material-symbols-outlined\",\n          children: \"autorenew\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 61\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quote-components\",\n      children: [/*#__PURE__*/_jsxDEV(Quote, {\n        quote: quote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), !mouseClicked && /*#__PURE__*/_jsxDEV(Author, {\n        author: author,\n        genre: genre,\n        handleMouseClick: handleMouseClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 27\n      }, this), mouseClicked && content]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(Main, \"ADeMa8sK5PrmWF4HmPDtenSYQMU=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["useState","useEffect","Quote","Author","jsxDEV","_jsxDEV","Main","_s","quote","setQuote","author","setAuthor","genre","setGenre","mouseClicked","setMouseClicked","getRandomQuote","data","children","fileName","_jsxFileName","lineNumber","columnNumber","randomNumber","Math","floor","random","length","i","quoteText","quoteAuthor","quoteGenre","fetchData","response","fetch","responseJson","json","err","console","log","content","sameAuthor","handleMouseClick","pickedAuthor","push","map","id","className","onClick","_c","$RefreshReg$"],"sources":["C:/Users/37063/OneDrive/Desktop/projects/quote-generator/src/pages/Main.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nimport '../styles/main.css';\r\n\r\nimport Quote from '../components/Quote';\r\nimport Author from '../components/Author';\r\n\r\nconst Main = () => {\r\n  const [quote, setQuote] = useState('');\r\n  const [author, setAuthor] = useState('');\r\n  const [genre, setGenre] = useState('');\r\n  const [mouseClicked, setMouseClicked] = useState(false);\r\n\r\n  const getRandomQuote = (data) => {\r\n\r\n    if (!data) {\r\n      return <p>Loading...</p>\r\n    }\r\n    let randomNumber = Math.floor(Math.random() * data.length);\r\n    for (let i = 0; i < data.length; i++) {\r\n      if (i === randomNumber) {\r\n        setQuote(data[i].quoteText);\r\n        setAuthor(data[i].quoteAuthor);\r\n        setGenre(data[i].quoteGenre);\r\n        setMouseClicked(false);\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const response = await fetch('https://quote-garden.onrender.com/api/v3/quotes');\r\n        const responseJson = await response.json();\r\n        getRandomQuote(responseJson.data)\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n\r\n  let content;\r\n\r\n  let sameAuthor = [];\r\n  const handleMouseClick = (pickedAuthor) => {\r\n\r\n\r\n    for (let i = 0; i < data.length; i++) {\r\n      if (data[i].quoteAuthor === pickedAuthor) {\r\n        sameAuthor.push(data[i]);\r\n      }\r\n    }\r\n\r\n\r\n    content = sameAuthor.map((quote) => <Quote key={quote.id} quote={quote.quoteText} />)\r\n    console.log(content);\r\n    setMouseClicked(true);\r\n  }\r\n\r\n\r\n  return (\r\n    <div className='main'>\r\n      <div className='random-button'>\r\n        <button id=\"random\" onClick={getRandomQuote}>random <span className=\"material-symbols-outlined\">\r\n          autorenew\r\n        </span></button>\r\n\r\n      </div>\r\n      <div className='quote-components'>\r\n        <Quote quote={quote} />\r\n        {!mouseClicked && <Author\r\n          author={author}\r\n          genre={genre}\r\n          handleMouseClick={handleMouseClick}\r\n        />}\r\n\r\n        {mouseClicked && content}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}