{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\37063\\\\OneDrive\\\\Desktop\\\\projects\\\\quote-generator\\\\src\\\\components\\\\Main.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport '../styles/main.css';\nimport Quote from './Quote';\nimport Author from './Author';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await fetch('https://quote-garden.onrender.com/api/v3/quotes');\n        const data = await response.json();\n        setData(data);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"random\",\n      children: \"random\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }, this), \"data ? \", data[2].quoteText]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(Main, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["useState","useEffect","Quote","Author","jsxDEV","_jsxDEV","Main","_s","data","setData","fetchData","response","fetch","json","err","console","log","children","id","fileName","_jsxFileName","lineNumber","columnNumber","quoteText","_c","$RefreshReg$"],"sources":["C:/Users/37063/OneDrive/Desktop/projects/quote-generator/src/components/Main.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nimport '../styles/main.css';\r\n\r\nimport Quote from './Quote';\r\nimport Author from './Author';\r\n\r\nconst Main = () => {\r\n    const [data, setData] = useState(null);\r\n\r\n\r\n\r\n    useEffect (() => {\r\n      async function fetchData() {\r\n        try {\r\n          const response = await fetch('https://quote-garden.onrender.com/api/v3/quotes');\r\n          const data = await response.json();\r\n          setData(data);\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      }\r\n\r\n      fetchData();\r\n    }, []);\r\n\r\n  \r\n\r\n    return ( \r\n        <div>\r\n          <button id=\"random\" >random</button>\r\n          data ? {data[2].quoteText}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Main;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,OAAO,oBAAoB;AAE3B,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAItCC,SAAS,CAAE,MAAM;IACf,eAAeS,SAASA,CAAA,EAAG;MACzB,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iDAAiD,CAAC;QAC/E,MAAMJ,IAAI,GAAG,MAAMG,QAAQ,CAACE,IAAI,EAAE;QAClCJ,OAAO,CAACD,IAAI,CAAC;MACf,CAAC,CAAC,OAAOM,GAAG,EAAE;QACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAClB;IACF;IAEAJ,SAAS,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;EAIN,oBACIL,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAQa,EAAE,EAAC,QAAQ;MAAAD,QAAA,EAAE;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,WAC7B,EAACd,IAAI,CAAC,CAAC,CAAC,CAACe,SAAS;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACrB;AAEd,CAAC;AAAAf,EAAA,CA3BKD,IAAI;AAAAkB,EAAA,GAAJlB,IAAI;AA6BV,eAAeA,IAAI;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}