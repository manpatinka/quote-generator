{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\37063\\\\OneDrive\\\\Desktop\\\\projects\\\\quote-generator\\\\src\\\\components\\\\Main.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport '../styles/main.css';\nimport Quote from './Quote';\nimport Author from './Author';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const [data, setData] = useState(null);\n  const getRandomQuote = data => {\n    if (data.length) {\n      let randomNumber = Math.floor(Math.random() * data.length);\n      for (let i = 0; i < data.length; i++) {\n        if (i === randomNumber) {\n          console.log(data[i]);\n          setQuote(data[i]);\n        }\n      }\n    }\n  };\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await fetch('https://quote-garden.onrender.com/api/v3/quotes');\n        const data = await response.json();\n        if (data) {\n          getRandomQuote(data);\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"random\",\n      children: \"random\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(Main, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["useState","useEffect","Quote","Author","jsxDEV","_jsxDEV","Main","_s","data","setData","getRandomQuote","length","randomNumber","Math","floor","random","i","console","log","setQuote","fetchData","response","fetch","json","err","children","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/37063/OneDrive/Desktop/projects/quote-generator/src/components/Main.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nimport '../styles/main.css';\r\n\r\nimport Quote from './Quote';\r\nimport Author from './Author';\r\n\r\nconst Main = () => {\r\n    const [data, setData] = useState(null);\r\n\r\n    const getRandomQuote = data => {\r\n      if(data.length) {\r\n        let randomNumber = Math.floor(Math.random() * data.length);\r\n          for (let i=0; i<data.length; i++) {\r\n            if(i === randomNumber) {\r\n               console.log(data[i])\r\n              setQuote(data[i]); \r\n      }\r\n      \r\n    }\r\n  }\r\n}\r\n\r\n    useEffect (() => {\r\n      async function fetchData() {\r\n        try {\r\n          const response = await fetch('https://quote-garden.onrender.com/api/v3/quotes');\r\n          const data = await response.json();\r\n          if(data) {\r\n            getRandomQuote(data);\r\n          }\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      }\r\n\r\n      fetchData();\r\n    }, []);\r\n\r\n    \r\n\r\n\r\n    return ( \r\n        <div>\r\n          <button id=\"random\" >random</button>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Main;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,OAAO,oBAAoB;AAE3B,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMU,cAAc,GAAGF,IAAI,IAAI;IAC7B,IAAGA,IAAI,CAACG,MAAM,EAAE;MACd,IAAIC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGP,IAAI,CAACG,MAAM,CAAC;MACxD,KAAK,IAAIK,CAAC,GAAC,CAAC,EAAEA,CAAC,GAACR,IAAI,CAACG,MAAM,EAAEK,CAAC,EAAE,EAAE;QAChC,IAAGA,CAAC,KAAKJ,YAAY,EAAE;UACpBK,OAAO,CAACC,GAAG,CAACV,IAAI,CAACQ,CAAC,CAAC,CAAC;UACrBG,QAAQ,CAACX,IAAI,CAACQ,CAAC,CAAC,CAAC;QACzB;MAEF;IACF;EACF,CAAC;EAEGf,SAAS,CAAE,MAAM;IACf,eAAemB,SAASA,CAAA,EAAG;MACzB,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iDAAiD,CAAC;QAC/E,MAAMd,IAAI,GAAG,MAAMa,QAAQ,CAACE,IAAI,EAAE;QAClC,IAAGf,IAAI,EAAE;UACPE,cAAc,CAACF,IAAI,CAAC;QACtB;MACF,CAAC,CAAC,OAAOgB,GAAG,EAAE;QACZP,OAAO,CAACC,GAAG,CAACM,GAAG,CAAC;MAClB;IACF;IAEAJ,SAAS,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;EAKN,oBACIf,OAAA;IAAAoB,QAAA,eACEpB,OAAA;MAAQqB,EAAE,EAAC,QAAQ;MAAAD,QAAA,EAAE;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAS;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAChC;AAEd,CAAC;AAAAvB,EAAA,CAxCKD,IAAI;AAAAyB,EAAA,GAAJzB,IAAI;AA0CV,eAAeA,IAAI;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}