{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\37063\\\\OneDrive\\\\Desktop\\\\projects\\\\quote-generator\\\\src\\\\pages\\\\Main.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport '../styles/main.css';\nimport Quote from '../components/Quote';\nimport Author from '../components/Author';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const [quote, setQuote] = useState('');\n  const [author, setAuthor] = useState('');\n  const [genre, setGenre] = useState('');\n  const [data, setData] = useState(null);\n  const getRandomQuote = () => {\n    if (!data) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 14\n      }, this);\n    }\n    let randomNumber = Math.floor(Math.random() * data.length);\n    for (let i = 0; i < data.length; i++) {\n      if (i === randomNumber) {\n        setQuote(data[i].quoteText);\n        setAuthor(data[i].quoteAuthor);\n        setGenre(data[i].quoteGenre);\n      }\n    }\n  };\n  const getSameAuthor = (data, pickedAuthor) => {\n    data.map(quote => {\n      if (quote.quoteAuthor === pickedAuthor) {\n        /*#__PURE__*/_jsxDEV(Quote, {\n          quote: quote.quoteText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }, this);\n      }\n    });\n  };\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await fetch('https://quote-garden.onrender.com/api/v3/quotes');\n        const responseJson = await response.json();\n        setData(responseJson.data);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    fetchData().then(getRandomQuote());\n  }, []);\n  const handleMouseClick = pickedAuthor => {\n    console.log(pickedAuthor);\n    getSameAuthor(data, pickedAuthor);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"random-button\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"random\",\n        onClick: getRandomQuote,\n        children: [\"random \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"material-symbols-outlined\",\n          children: \"autorenew\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 61\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quote-components\",\n      children: [/*#__PURE__*/_jsxDEV(Quote, {\n        quote: quote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Author, {\n        author: author,\n        genre: genre,\n        handleMouseClick: handleMouseClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(Main, \"/YXo5HKplD4Dsc0ke+24WMNe0r4=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["useState","useEffect","Quote","Author","jsxDEV","_jsxDEV","Main","_s","quote","setQuote","author","setAuthor","genre","setGenre","data","setData","getRandomQuote","children","fileName","_jsxFileName","lineNumber","columnNumber","randomNumber","Math","floor","random","length","i","quoteText","quoteAuthor","quoteGenre","getSameAuthor","pickedAuthor","map","fetchData","response","fetch","responseJson","json","err","console","log","then","handleMouseClick","className","id","onClick","_c","$RefreshReg$"],"sources":["C:/Users/37063/OneDrive/Desktop/projects/quote-generator/src/pages/Main.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nimport '../styles/main.css';\r\n\r\nimport Quote from '../components/Quote';\r\nimport Author from '../components/Author';\r\n\r\nconst Main = () => {\r\n  const [quote, setQuote] = useState('');\r\n  const [author, setAuthor] = useState('');\r\n  const [genre, setGenre] = useState('');\r\n  const [data, setData] = useState(null);\r\n\r\n  const getRandomQuote = () => {\r\n\r\n    if (!data) {\r\n      return <p>Loading...</p>\r\n    }\r\n    let randomNumber = Math.floor(Math.random() * data.length);\r\n    for (let i = 0; i < data.length; i++) {\r\n      if (i === randomNumber) {\r\n        setQuote(data[i].quoteText);\r\n        setAuthor(data[i].quoteAuthor);\r\n        setGenre(data[i].quoteGenre);\r\n      }\r\n    }\r\n  }\r\n\r\n  const getSameAuthor = (data, pickedAuthor) => {\r\n    data.map((quote) => {\r\n      if (quote.quoteAuthor === pickedAuthor) {\r\n        <Quote quote={quote.quoteText} />\r\n      }\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const response = await fetch('https://quote-garden.onrender.com/api/v3/quotes');\r\n        const responseJson = await response.json();\r\n        setData(responseJson.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n    fetchData().then(getRandomQuote());\r\n    \r\n  }, []);\r\n\r\n\r\n  const handleMouseClick = (pickedAuthor) => {\r\n    console.log(pickedAuthor);\r\n    getSameAuthor(data, pickedAuthor);\r\n  }\r\n\r\n\r\n  return (\r\n    <div className='main'>\r\n      <div className='random-button'>\r\n        <button id=\"random\" onClick={getRandomQuote}>random <span className=\"material-symbols-outlined\">\r\n          autorenew\r\n        </span></button>\r\n\r\n      </div>\r\n      <div className='quote-components'>\r\n        <Quote quote={quote} />\r\n        <Author\r\n          author={author}\r\n          genre={genre}\r\n          handleMouseClick={handleMouseClick}\r\n        />\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}